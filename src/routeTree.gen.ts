/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const QuestsIndexLazyImport = createFileRoute('/quests/')()
const ProfileIndexLazyImport = createFileRoute('/profile/')()
const ManageIndexLazyImport = createFileRoute('/manage/')()
const LoginIndexLazyImport = createFileRoute('/login/')()
const AnalyticsIndexLazyImport = createFileRoute('/analytics/')()
const ProfileBadgesIndexLazyImport = createFileRoute('/profile/badges/')()
const ManageTagsIndexLazyImport = createFileRoute('/manage/tags/')()
const ManageNewIndexLazyImport = createFileRoute('/manage/new/')()
const ManageEditIndexLazyImport = createFileRoute('/manage/edit/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const QuestsIndexLazyRoute = QuestsIndexLazyImport.update({
  path: '/quests/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/quests/index.lazy').then((d) => d.Route))

const ProfileIndexLazyRoute = ProfileIndexLazyImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/index.lazy').then((d) => d.Route))

const ManageIndexLazyRoute = ManageIndexLazyImport.update({
  path: '/manage/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/manage/index.lazy').then((d) => d.Route))

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const AnalyticsIndexLazyRoute = AnalyticsIndexLazyImport.update({
  path: '/analytics/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/analytics/index.lazy').then((d) => d.Route),
)

const ProfileBadgesIndexLazyRoute = ProfileBadgesIndexLazyImport.update({
  path: '/profile/badges/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/profile/badges/index.lazy').then((d) => d.Route),
)

const ManageTagsIndexLazyRoute = ManageTagsIndexLazyImport.update({
  path: '/manage/tags/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manage/tags/index.lazy').then((d) => d.Route),
)

const ManageNewIndexLazyRoute = ManageNewIndexLazyImport.update({
  path: '/manage/new/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manage/new/index.lazy').then((d) => d.Route),
)

const ManageEditIndexLazyRoute = ManageEditIndexLazyImport.update({
  path: '/manage/edit/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/manage/edit/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/analytics/': {
      preLoaderRoute: typeof AnalyticsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/manage/': {
      preLoaderRoute: typeof ManageIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      preLoaderRoute: typeof ProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/quests/': {
      preLoaderRoute: typeof QuestsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/manage/edit/': {
      preLoaderRoute: typeof ManageEditIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/manage/new/': {
      preLoaderRoute: typeof ManageNewIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/manage/tags/': {
      preLoaderRoute: typeof ManageTagsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/badges/': {
      preLoaderRoute: typeof ProfileBadgesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AnalyticsIndexLazyRoute,
  LoginIndexLazyRoute,
  ManageIndexLazyRoute,
  ProfileIndexLazyRoute,
  QuestsIndexLazyRoute,
  ManageEditIndexLazyRoute,
  ManageNewIndexLazyRoute,
  ManageTagsIndexLazyRoute,
  ProfileBadgesIndexLazyRoute,
])

/* prettier-ignore-end */

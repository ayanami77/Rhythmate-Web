/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as RouteImport } from "./routes/route";
import { Route as QuestsIndexImport } from "./routes/quests/index";
import { Route as QuestsProfileIndexImport } from "./routes/quests/profile/index";
import { Route as QuestsManageIndexImport } from "./routes/quests/manage/index";
import { Route as QuestsAnalyticsIndexImport } from "./routes/quests/analytics/index";
import { Route as QuestsProfileBadgesIndexImport } from "./routes/quests/profile/badges/index";
import { Route as QuestsManageNewIndexImport } from "./routes/quests/manage/new/index";
import { Route as QuestsManageEditIndexImport } from "./routes/quests/manage/edit/index";

// Create Virtual Routes

const LoginIndexLazyImport = createFileRoute("/login/")();

// Create/Update Routes

const RouteRoute = RouteImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  path: "/login/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/login/index.lazy").then((d) => d.Route));

const QuestsIndexRoute = QuestsIndexImport.update({
  path: "/quests/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/quests/index.lazy").then((d) => d.Route));

const QuestsProfileIndexRoute = QuestsProfileIndexImport.update({
  path: "/quests/profile/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/quests/profile/index.lazy").then((d) => d.Route));

const QuestsManageIndexRoute = QuestsManageIndexImport.update({
  path: "/quests/manage/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/quests/manage/index.lazy").then((d) => d.Route));

const QuestsAnalyticsIndexRoute = QuestsAnalyticsIndexImport.update({
  path: "/quests/analytics/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/quests/analytics/index.lazy").then((d) => d.Route));

const QuestsProfileBadgesIndexRoute = QuestsProfileBadgesIndexImport.update({
  path: "/quests/profile/badges/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/quests/profile/badges/index.lazy").then((d) => d.Route));

const QuestsManageNewIndexRoute = QuestsManageNewIndexImport.update({
  path: "/quests/manage/new/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/quests/manage/new/index.lazy").then((d) => d.Route));

const QuestsManageEditIndexRoute = QuestsManageEditIndexImport.update({
  path: "/quests/manage/edit/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof RouteImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/": {
      preLoaderRoute: typeof QuestsIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/login/": {
      preLoaderRoute: typeof LoginIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/analytics/": {
      preLoaderRoute: typeof QuestsAnalyticsIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/manage/": {
      preLoaderRoute: typeof QuestsManageIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/profile/": {
      preLoaderRoute: typeof QuestsProfileIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/manage/edit/": {
      preLoaderRoute: typeof QuestsManageEditIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/manage/new/": {
      preLoaderRoute: typeof QuestsManageNewIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/quests/profile/badges/": {
      preLoaderRoute: typeof QuestsProfileBadgesIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  RouteRoute,
  QuestsIndexRoute,
  LoginIndexLazyRoute,
  QuestsAnalyticsIndexRoute,
  QuestsManageIndexRoute,
  QuestsProfileIndexRoute,
  QuestsManageEditIndexRoute,
  QuestsManageNewIndexRoute,
  QuestsProfileBadgesIndexRoute,
]);

/* prettier-ignore-end */
